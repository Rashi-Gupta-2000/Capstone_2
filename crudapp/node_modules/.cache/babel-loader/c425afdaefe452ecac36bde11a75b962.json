{"ast":null,"code":"import { createStore } from 'redux';\nconst initialState = {\n  email: '',\n  password: '',\n  isLogged: \"\",\n  users: [],\n  fullname: \"\",\n  usermail: \"\",\n  userpassword: \"\",\n  userphone: \"\",\n  usergender: \"Male\",\n  userId: undefined\n};\n\nconst crudReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type == \"email\") {\n    return { ...state,\n      email: action.value\n    };\n  }\n\n  if (action.type == \"password\") {\n    return { ...state,\n      password: action.value\n    };\n  }\n\n  if (action.type == \"logged\") {\n    return { ...state,\n      isLogged: action.value\n    };\n  }\n\n  if (action.type == \"users\") {\n    return { ...state,\n      users: action.value\n    };\n  }\n\n  if (action.type == \"fullname\") {\n    return { ...state,\n      fullname: action.value\n    };\n  }\n\n  if (action.type == \"usermail\") {\n    return { ...state,\n      usermail: action.value\n    };\n  }\n\n  if (action.type == \"userpassword\") {\n    return { ...state,\n      userpassword: action.value\n    };\n  }\n\n  if (action.type == \"userphone\") {\n    return { ...state,\n      userphone: action.value\n    };\n  }\n\n  if (action.type == \"usergender\") {\n    return { ...state,\n      usergender: action.value\n    };\n  }\n\n  return state;\n};\n\nconst crudStore = createStore(crudReducer);\nexport default crudStore;","map":{"version":3,"sources":["/home/tempadmin/Documents/Innogeeks_Training/Capstone-NodeReact/crudapp/src/Store/crud-store.js"],"names":["createStore","initialState","email","password","isLogged","users","fullname","usermail","userpassword","userphone","usergender","userId","undefined","crudReducer","state","action","type","value","crudStore"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,QAAQ,EAAE,EAHO;AAIjBC,EAAAA,KAAK,EAAE,EAJU;AAKjBC,EAAAA,QAAQ,EAAC,EALQ;AAMjBC,EAAAA,QAAQ,EAAC,EANQ;AAOjBC,EAAAA,YAAY,EAAC,EAPI;AAQjBC,EAAAA,SAAS,EAAC,EARO;AASjBC,EAAAA,UAAU,EAAC,MATM;AAUjBC,EAAAA,MAAM,EAAEC;AAVS,CAArB;;AAaA,MAAMC,WAAW,GAAG,YAAiC;AAAA,MAAhCC,KAAgC,uEAAxBb,YAAwB;AAAA,MAAXc,MAAW;;AACjD,MAAGA,MAAM,CAACC,IAAP,IAAe,OAAlB,EAA0B;AACtB,WAAM,EACF,GAAGF,KADD;AAEFZ,MAAAA,KAAK,EAACa,MAAM,CAACE;AAFX,KAAN;AAIH;;AACD,MAAGF,MAAM,CAACC,IAAP,IAAe,UAAlB,EAA6B;AACzB,WAAM,EACF,GAAGF,KADD;AAEFX,MAAAA,QAAQ,EAACY,MAAM,CAACE;AAFd,KAAN;AAIH;;AACD,MAAGF,MAAM,CAACC,IAAP,IAAe,QAAlB,EAA2B;AACvB,WAAM,EACF,GAAGF,KADD;AAEFV,MAAAA,QAAQ,EAACW,MAAM,CAACE;AAFd,KAAN;AAIH;;AACD,MAAGF,MAAM,CAACC,IAAP,IAAe,OAAlB,EAA0B;AACtB,WAAM,EACF,GAAGF,KADD;AAEFT,MAAAA,KAAK,EAACU,MAAM,CAACE;AAFX,KAAN;AAIH;;AACD,MAAGF,MAAM,CAACC,IAAP,IAAe,UAAlB,EAA6B;AACzB,WAAM,EACF,GAAGF,KADD;AAEFR,MAAAA,QAAQ,EAACS,MAAM,CAACE;AAFd,KAAN;AAIH;;AAED,MAAGF,MAAM,CAACC,IAAP,IAAe,UAAlB,EAA6B;AACzB,WAAM,EACF,GAAGF,KADD;AAEFP,MAAAA,QAAQ,EAACQ,MAAM,CAACE;AAFd,KAAN;AAIH;;AACD,MAAGF,MAAM,CAACC,IAAP,IAAe,cAAlB,EAAiC;AAC7B,WAAM,EACF,GAAGF,KADD;AAEFN,MAAAA,YAAY,EAACO,MAAM,CAACE;AAFlB,KAAN;AAIH;;AACD,MAAGF,MAAM,CAACC,IAAP,IAAe,WAAlB,EAA8B;AAC1B,WAAM,EACF,GAAGF,KADD;AAEFL,MAAAA,SAAS,EAACM,MAAM,CAACE;AAFf,KAAN;AAIH;;AACD,MAAGF,MAAM,CAACC,IAAP,IAAe,YAAlB,EAA+B;AAC3B,WAAM,EACF,GAAGF,KADD;AAEFJ,MAAAA,UAAU,EAACK,MAAM,CAACE;AAFhB,KAAN;AAIH;;AACD,SAAOH,KAAP;AACH,CAzDD;;AA2DA,MAAMI,SAAS,GAAGlB,WAAW,CAACa,WAAD,CAA7B;AAEA,eAAeK,SAAf","sourcesContent":["import {createStore} from 'redux'\n\nconst initialState = { \n    email: '',\n    password: '',\n    isLogged: \"\",\n    users: [],\n    fullname:\"\",\n    usermail:\"\",\n    userpassword:\"\",\n    userphone:\"\",\n    usergender:\"Male\",\n    userId: undefined,\n};\n\nconst crudReducer = (state = initialState,action) => {\n    if(action.type == \"email\"){\n        return{\n            ...state,\n            email:action.value\n        }\n    }\n    if(action.type == \"password\"){\n        return{\n            ...state,\n            password:action.value\n        }\n    }\n    if(action.type == \"logged\"){\n        return{\n            ...state,\n            isLogged:action.value\n        }\n    }\n    if(action.type == \"users\"){\n        return{\n            ...state,\n            users:action.value\n        }\n    }\n    if(action.type == \"fullname\"){\n        return{\n            ...state,\n            fullname:action.value\n        }\n    }\n\n    if(action.type == \"usermail\"){\n        return{\n            ...state,\n            usermail:action.value\n        }\n    }\n    if(action.type == \"userpassword\"){\n        return{\n            ...state,\n            userpassword:action.value\n        }\n    }\n    if(action.type == \"userphone\"){\n        return{\n            ...state,\n            userphone:action.value\n        }\n    }\n    if(action.type == \"usergender\"){\n        return{\n            ...state,\n            usergender:action.value\n        }\n    }\n    return state;\n}\n\nconst crudStore = createStore(crudReducer)\n\nexport default crudStore;"]},"metadata":{},"sourceType":"module"}